substitutions:
  _PROFILE: ''
  _IMAGE: 'gcr.io/cascade-454406/springboot-service'

steps:
  # Step 1: Set profile based on branch
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Set Profile'
    entrypoint: 'bash'
    args:
      - -c
      - |
        if [[ "$BRANCH_NAME" == "main" ]]; then
          echo "_PROFILE=main" >> /workspace/profile.env
        else
          echo "_PROFILE=dev" >> /workspace/profile.env
        fi

  # Step 2: Build the JAR
  - name: 'gcr.io/cloud-builders/mvn'
    id: 'Build JAR'
    entrypoint: 'mvn'
    args: ['clean', 'package', '-DskipTests']

  # Step 3: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Image'
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/profile.env
        docker build -t ${_IMAGE} .

  # Step 4: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Image'
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/profile.env
        docker push ${_IMAGE}

  # Step 5: Create a release and deploy using Cloud Deploy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy with Cloud Deploy'
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/profile.env
        gcloud deploy releases create release-${BUILD_ID} \
          --delivery-pipeline=spring-boot-app-cd \
          --region=us-central1 \
          --source=. \
          --to-target=${_PROFILE} \
          --skaffold-file=skaffold.yaml

options:
  logging: CLOUD_LOGGING_ONLY

timeout: 900s
